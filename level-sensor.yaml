# dashboard_import:
#  package_import_url: github://MariuszWoszczynski/Level-sensor/level-sensor.yaml@main
#  import_full_config: true
 
substitutions:
  name: level-sensor
  friendly_name: Level sensor
  status_led: GPIO15
  
esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  project:
    name: esphome.level_sensor
    version: "1.0"
 
esp32:
  board: lolin_s2_mini
  framework:
    type: arduino

 
 
time:
 - platform: sntp
   id: time_sntp
 
 
# Enable logging
logger:
  level: debug
 
# Enable Home Assistant API
api:
  encryption:
    key: "f1OnO1pFrP+WH/bsrxh6dmfoLOSwxx19NN6jGu348pk="

ota:
  password: "ef6ad0390dea3e1631dfeeb4835d57b7"
 
wifi:
  ssid: !secret wifi_ssid                                 # your WIFI SSID
  password: !secret wifi_password                         # your WIFI password
  power_save_mode: none
  fast_connect: true
  reboot_timeout: 10min
#  static IP configuration (instead of data from the secret file)
#  manual_ip:
#    static_ip: 192.168.1.99
#    gateway: 192.168.1.1
#    subnet: 255.255.255.0
 
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Level sensor AP"
#    password: "password_12345678"
 
# Status LED for connection
status_led:
  pin:
    # Blue LED
    number: ${status_led}

captive_portal:
 
web_server: 
  port: 80
#  auth:
#    username: !secret web_server_username              # your web server username
#    password: !secret web_server_password              # your web server password
 

sensor:
      
  - platform: ultrasonic                                # level sensor in %
    trigger_pin: 
      number: GPIO40
      allow_other_uses: true
    echo_pin: 
      number: GPIO39
      allow_other_uses: true
    name: "Level [%]"                                   # name of your sensor
    update_interval: 10s
    unit_of_measurement: '%'
    accuracy_decimals: 0
    filters:
      - median:
          window_size: 5
          send_every: 5
          send_first_at: 1
      - calibrate_linear:
        - 0.10 -> 100                                   # distance [m] for 100%
        - 0.70 -> 0                                     # distance [m] for 0%
      - round: 0

  - platform: ultrasonic                                # level sensor in [m]
    trigger_pin: 
      number: GPIO40
      allow_other_uses: true
    echo_pin: 
      number: GPIO39
      allow_other_uses: true
    name: "Level - [m]"                                # name of your sensor
    accuracy_decimals: 2
    filters:
      - median:
          window_size: 5
          send_every: 5
          send_first_at: 1
    update_interval: 10s

